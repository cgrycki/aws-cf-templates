---
AWSTemplateFormatVersion: '2010-09-09'
Description: Pipeline using CodePipeline and CodeBuild for continuous delivery of a single-page application to S3 and CloudFront
Parameters:
  BuildType:
    Type: String
    Default: 'LINUX_CONTAINER'
    Description: The build container type to use for building the app
  BuildComputeType:
    Type: String
    Default: 'BUILD_GENERAL1_SMALL'
    Description: The build compute type to use for building the app
  BuildImage:
    Type: String
    Default: 'aws/codebuild/nodejs:6.3.1'
    Description: The build image to use for building the app
  DeployImage:
    Type: String
    Default: 'aws/codebuild/ubuntu-base:14.04'
    Description: The build image to use for deploying the app
  EmailAddress:
    Type: String
    Description: E-Mail address that will receive pipeline state notifications
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Build Configuration
        Parameters:
          - BuildType
          - BuildComputeType
          - BuildImage
          - DeployImage
      - Label:
          default: Notifications
        Parameters:
          - EmailAddress
    ParameterLabels:
      BuildType: 
        default: CodeBuild type
      BuildComputeType: 
        default: CodeBuild instance type
      BuildImage: 
        default: Build image
      DeployImage: 
        default: Deploy image
      EmailAddress:
        default: E-Mail Address
Resources:
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codebuild.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: codebuild-service
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action: '*'
            Resource: '*'
          Version: '2012-10-17'
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: codepipeline-service
        PolicyDocument:
          Statement:
          - Action:
            - codebuild:StartBuild
            - codebuild:BatchGetBuilds
            - codebuild:StopBuild
            Resource:
            - !GetAtt 'CodeBuildBuildSite.Arn'
            - !GetAtt 'CodeBuildDeploySite.Arn'
            Effect: Allow
          - Action:
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:GetBucketVersioning
            - s3:PutObject
            Resource:
            - !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref 'PipelineBucket'
            - !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref 'PipelineBucket'
                - /*
            Effect: Allow
          Version: '2012-10-17'
  SiteBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub "${AWS::StackName}-frontend"
  PipelineBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 1
            Status: Enabled
  CodeCommitRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryDescription: Cache invalidator frontend
      RepositoryName: !Sub "${AWS::StackName}_repo"
  CodeBuildBuildSite:
    Type: AWS::CodeBuild::Project
    DependsOn: CodeBuildRole
    Properties:
      Name: !Sub ${AWS::StackName}-BuildSite
      Description: Build site with npm
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: !Ref BuildType
        ComputeType: !Ref BuildComputeType
        Image: !Sub ${BuildImage}
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.2
          phases:
            install:
              commands:
                - echo Install started on `date`
                - npm install --save
            build:
              commands:
                - echo Build started on `date`
                - npm run build
            post_build:
              commands:
                - echo Build completed on `date`
          artifacts:
            files:
              - '**/*'
            base-directory: build
      TimeoutInMinutes: 15
  CodeBuildDeploySite:
    Type: AWS::CodeBuild::Project
    DependsOn: CodeBuildRole
    Properties:
      Name: !Sub ${AWS::StackName}-DeploySite
      Description: Deploy site to S3 and CloudFront
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: !Ref BuildType
        ComputeType: !Ref BuildComputeType
        Image: !Sub ${DeployImage}
        EnvironmentVariables:
          - Name: CloudFrontDistributionId
            Value: !Ref CloudFrontDistribution
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.1
          phases:
            build:
              commands:
                - echo Deploying site to S3
                - aws s3 sync . s3://${SiteBucketName} --delete --acl public-read
      TimeoutInMinutes: 10
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
      - Name: Source
        Actions:
        - InputArtifacts: []
          Name: Source
          ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Version: '1'
            Provider: GitHub
          OutputArtifacts:
          - Name: SourceOutput
          Configuration:
            Owner: !Ref GitHubUser
            Repo: !Ref GitHubRepo
            Branch: !Ref GitHubBranch
            OAuthToken: !Ref GitHubToken
          RunOrder: 1
      - Name: Build
        Actions:
        - Name: NPM_Build
          ActionTypeId:
            Category: Build
            Owner: AWS
            Version: '1'
            Provider: 'CodeBuild'
          InputArtifacts:
          - Name: SourceOutput
          OutputArtifacts:
          - Name: BuildOutput
          Configuration:
            ProjectName: !Ref CodeBuildBuildSite
          RunOrder: 1
      - Name: Deploy
        Actions:
        - Name: Deploy
          ActionTypeId:
            Category: Build
            Owner: AWS
            Version: '1'
            Provider: CodeBuild
          InputArtifacts:
          - Name: BuildOutput
          OutputArtifacts:
          - Name: DeployOutput
          Configuration:
            ProjectName: !Ref CodeBuildDeploySite
          RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineBucket
  DeveloperNotificationSNSTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Id: SiteDeploymentPublishPolicy
        Version: '2012-10-17'
        Statement:
        - Sid: SiteDeploymentPublishPolicy
          Effect: Allow
          Principal:
            Service: events.amazonaws.com
          Action: sns:Publish
          Resource: !Ref DeveloperNotification
      Topics:
        - !Ref DeveloperNotification
  DeveloperNotification:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - Endpoint: !Ref EmailAddress
        Protocol: email
  PipelineEventRule: 
    Type: AWS::Events::Rule
    Properties: 
      Description: Send a notification about the pipeline state
      EventPattern: 
        source:
        - aws.codepipeline
        detail-type:
        - CodePipeline Pipeline Execution State Change
        detail:
          state:
          - STARTED
          - SUCCEEDED
          - RESUMED
          - FAILED
          - CANCELED
          - SUPERSEDED
          pipeline:
          - !Ref Pipeline
      State: ENABLED
      Targets: 
        - Arn: !Ref 'DeveloperNotification'
          Id: Pipeline_State_Notification
          InputTransformer:
            InputTemplate: !Sub '"The Pipeline <pipeline> has <state>. Additional details can be reviewed at https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}."'
            InputPathsMap:
              pipeline: $.detail.pipeline
              state: $.detail.state
  SiteDeploymentEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Send a notification when the site is successfully deployed to cloudfront
      EventPattern:
        source:
        - aws.codebuild
        detail-type:
        - CodeBuild Build State Change
        detail:
          build-status:
            - SUCCEEDED
          project-name:
          - !Ref CodeBuildDeploySite
      State: ENABLED
      Targets:
        - Arn: !Ref 'DeveloperNotification'
          Id: CodeBuild_DeploySite_Notification
          Input:
            !Join
              - ''
              - - '"'
                - 'The site has been updated. URL: '
                - !Join
                  - ''
                  - - 'https://'
                    - !GetAtt [CloudFrontDistribution, DomainName]
                - !If 
                  - UseCustomDomainName
                  - !Join 
                    - ' '
                    - - ''
                      - 'Alternative URL:'
                      - !Ref SiteCloudFrontName
                  - !Ref 'AWS::NoValue'
                - '"'
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Used to retrieve content from S3
  SiteBucketCloudFrontPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SiteBucket
      PolicyDocument:
        Statement:
          - Sid: 'CloudFrontGetObject'
            Action: 
            - s3:GetObject
            Effect: Allow
            Resource:
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref SiteBucket
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref SiteBucket
                  - '/*'
            Principal:
              AWS:
                !Join
                  - ' '
                  - - 'arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity'
                    - !Ref CloudFrontOriginAccessIdentity
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: Distribution from an S3 Bucket
        DefaultRootObject: index.html
        Aliases:
          - !If [UseCustomDomainName, !Ref SiteCloudFrontName, !Ref 'AWS::NoValue']
        DefaultCacheBehavior:
          Compress: True
          ForwardedValues:
            QueryString: False
            Cookies:
              Forward: none
          TargetOriginId: s3-origin
          ViewerProtocolPolicy: redirect-to-https
        Enabled: True
        Origins:
          - DomainName: !GetAtt SiteBucket.DomainName
            Id: s3-origin
            S3OriginConfig:
              OriginAccessIdentity:
                !Join
                  - '/'
                  - - 'origin-access-identity'
                    - 'cloudfront'
                    - !Ref CloudFrontOriginAccessIdentity
        PriceClass: !Ref SiteCloudFrontPriceClass
        ViewerCertificate:
          CloudFrontDefaultCertificate: True
  Cert:
    Type: AWS::CertificateManager::Certificate
    Condition: UseCustomDomainName
    Properties:
      DomainName: !Ref SiteCloudFrontName
      DomainValidationOptions:
        - DomainName: !Ref SiteCloudFrontName
          ValidationDomain: !Ref SiteValidationDomain
          SubjectAlternativeNames:
            - !GetAtt [CloudFrontDistribution, DomainName]
Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
    Description: CodePipeline URL
  SiteUrl:
    Value: 
      !Join
        - ''
        - - 'https://'
          - !GetAtt [CloudFrontDistribution, DomainName]
    Description: CloudFront Website URL
